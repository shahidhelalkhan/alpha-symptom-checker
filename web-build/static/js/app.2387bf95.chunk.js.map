{"version":3,"sources":["screens/Loader.jsx","api/auth.js","screens/Home.jsx","api/requests.js","screens/Symptoms.jsx","screens/Diagnosis.jsx","navigation/RootNavigator.js","App.js","web-build/register-service-worker.js"],"names":["Loader","View","style","flex","justifyContent","alignItems","size","color","CryptoJS","require","AuthHost","HomeComponent","token","navigation","useState","loading","age","setAge","backgroundColor","Text","padding","fontSize","TextInput","placeholder","borderBottomWidth","borderBottomColor","onChangeText","value","TouchableOpacity","onPress","localStorage","setItem","navigate","marginTop","Home","props","SetLoading","SetToken","useEffect","computedHashString","HmacMD5","toString","enc","Base64","fetch","method","headers","Authorization","then","res","json","getToken","Token","catch","err","console","log","Request","getSymptoms","ApiMedicHost","getDiagnosis","symptoms","year","map","s","ID","join","searchBar","search","setSearch","lightTheme","round","text","styles","StyleSheet","create","container","StatusBar","currentHeight","item","marginVertical","marginHorizontal","title","Symptoms","loader","route","params","data","SetData","selectItem","i","selected","modifiedData","SafeAreaView","FlatList","height","renderItem","index","icon","onClose","Name","keyExtractor","ListHeaderComponent","symptomArray","obj","push","goToDiagnosis","ActivityIndicator","Diagnosis","diagnosis","setDiagnosis","setLoading","getItem","Issue","RootNavigator","Stack","createStackNavigator","Navigator","initialRouteName","Screen","name","component","options","headerTitleAlign","App","NavigationContainer","navigator","window","addEventListener","serviceWorker","register","scope","info","error"],"mappings":"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","file":"static/js/app.2387bf95.chunk.js","sourcesContent":["import React from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nfunction Loader() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator size=\"large\" color=\"#84CAE7\" />\n    </View>\n  );\n}\n\nexport default Loader;\n","const CryptoJS = require(\"crypto-js\");\n\nconst ApiMedicHost = \"https://sandbox-healthservice.priaid.ch\";\nconst AuthHost = \"https://sandbox-authservice.priaid.ch\";\nconst user_id = \"shahidhelalkhan@gmail.com\";\nconst password = \"f3C8Lnp5K7ZaHz49T\";\n\nexport const getToken = () => {\n  const computedHash = CryptoJS.HmacMD5(`${AuthHost}/login`, password);\n  const computedHashString = computedHash.toString(CryptoJS.enc.Base64);\n\n  return fetch(`${AuthHost}/login`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${user_id}:${computedHashString}`,\n    },\n  }).then((res) => res.json());\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ActivityIndicator,\n} from \"react-native\";\nimport Loader from \"./Loader\";\nimport { getToken } from \"../api/auth\";\n\nconst HomeComponent = ({ token, navigation }) => {\n  const [loading, SetLoading] = useState(false);\n  const [age, setAge] = useState(0);\n  const handleContinueBtn = () => {\n    localStorage.setItem(\"age\", age);\n    navigation.navigate(\"symptoms\", { token: token });\n  };\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#fff\",\n      }}\n    >\n      <Text style={{ padding: 10, fontSize: 20 }}>Alpha Symptom Checker</Text>\n      <TextInput\n        placeholder=\"Age\"\n        style={{ padding: 10, borderBottomWidth: 1, borderBottomColor: \"red\" }}\n        onChangeText={(value) => setAge(value)}\n      ></TextInput>\n      <TouchableOpacity\n        onPress={handleContinueBtn}\n        style={{ padding: 15, backgroundColor: \"#84CAE7\", marginTop: 10 }}\n      >\n        {loading ? (\n          <ActivityIndicator size=\"small\" color=\"white\" />\n        ) : (\n          <Text style={{ color: \"white\" }}>Continue</Text>\n        )}\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nfunction Home(props) {\n  const [loading, SetLoading] = useState(true);\n  const [token, SetToken] = useState(null);\n  useEffect(() => {\n    getToken()\n      .then((res) => {\n        SetToken(res.Token);\n        SetLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return loading ? (\n    <Loader />\n  ) : (\n    <HomeComponent token={token} navigation={props.navigation} />\n  );\n}\n\nexport default Home;\n","const ApiMedicHost = \"https://sandbox-healthservice.priaid.ch\";\nconst lang = \"en-gb\";\nconst format = \"json\";\n\nconst Request = {\n  getSymptoms(token) {\n    return fetch(\n      `${ApiMedicHost}/symptoms?language=${lang}&format=${format}&token=${token}`,\n      {\n        method: \"GET\",\n      }\n    ).then((res) => res.json());\n  },\n  getDiagnosis(token, { symptoms, year }) {\n    return fetch(\n      `${ApiMedicHost}/diagnosis?symptoms=[${symptoms\n        .map((s) => s.ID)\n        .join(\n          \",\"\n        )}]&language=${lang}&format=${format}&token=${token}&gender=male&year_of_birth=${year}`,\n      {\n        method: \"GET\",\n      }\n    ).then((res) => res.json());\n  },\n};\n\nexport default Request;\n","import React, { useEffect, useState, useLayoutEffect } from \"react\";\nimport {\n  Text,\n  View,\n  FlatList,\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport Request from \"../api/requests\";\nimport Loader from \"./Loader\";\nimport { Chip } from \"react-native-paper\";\n\nimport { SearchBar } from \"react-native-elements\";\n\nconst searchBar = () => {\n  const [search, setSearch] = useState(\"\");\n  return (\n    <>\n      <SearchBar\n        lightTheme\n        round\n        placeholder=\"Start typing symptoms\"\n        onChangeText={(text) => setSearch(text)}\n        value={search}\n      ></SearchBar>\n    </>\n  );\n};\nconst FlatListItemSeparator = () => <View style={styles.line} />;\n\nfunction Symptoms(props) {\n  const [loading, SetLoading] = useState(true);\n  const [loader, setLoader] = useState(false);\n  const [token, SetToken] = useState(props.route.params.token);\n  const [data, SetData] = useState(null);\n\n  useEffect(() => {\n    Request.getSymptoms(token).then((res) => {\n      SetData(res);\n      SetLoading(false);\n    });\n  }, []);\n  const selectItem = (i, selected) => {\n    const modifiedData = [...data];\n    modifiedData[i].selected = !selected;\n    SetData(modifiedData);\n  };\n\n  const goToDiagnosis = () => {\n    let symptomArray = [];\n    data.map((obj) => {\n      if (obj.selected) {\n        symptomArray.push(obj);\n      }\n    });\n    props.navigation.navigate(\"diagnosis\", {\n      symptoms: symptomArray,\n      token: token,\n    });\n  };\n\n  const renderItem = ({ item, index }) => {\n    if (item.selected) {\n      return (\n        <Chip\n          icon=\"checkbox-marked\"\n          onClose={() => selectItem(index, item.selected)}\n        >\n          {item.Name}\n        </Chip>\n      );\n    } else {\n      return (\n        <Chip\n          icon=\"information\"\n          onPress={() => selectItem(index, item.selected)}\n        >\n          {item.Name}\n        </Chip>\n      );\n    }\n  };\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        style={{ height: 450 }}\n        data={data}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.Name}\n        ListHeaderComponent={searchBar}\n      />\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#84CAE7\",\n        }}\n        onPress={() => goToDiagnosis()}\n      >\n        {loader ? (\n          <ActivityIndicator size=\"small\" color=\"white\" />\n        ) : (\n          <Text style={{ color: \"white\" }}>Continue</Text>\n        )}\n      </TouchableOpacity>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    backgroundColor: \"purple\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 16,\n    color: \"#fff\",\n  },\n});\n\nexport default Symptoms;\n","import React, { useState, useEffect } from \"react\";\nimport { Text, View, FlatList } from \"react-native\";\nimport Request from \"../api/requests\";\nimport Loader from \"./Loader\";\n\nfunction Diagnosis(props) {\n  const [symptoms, setSymptoms] = useState(props.route.params.symptoms);\n  const [token, setToken] = useState(props.route.params.token);\n  const [diagnosis, setDiagnosis] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const age = localStorage.getItem(\"age\");\n    console.log(age);\n    Request.getDiagnosis(token, { symptoms, year: \"1992\" })\n      .then((res) => {\n        setLoading(false);\n        console.log(res);\n        setDiagnosis(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <View style={{ flex: 1, alignItems: \"center\" }}>\n      <FlatList\n        style={{ height: 450 }}\n        data={diagnosis}\n        renderItem={(item) => <Text>{item.item.Issue.Name}</Text>}\n        keyExtractor={(item) => item.Name}\n      />\n    </View>\n  );\n}\n\nexport default Diagnosis;\n","import React from \"react\";\nimport { Button } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"../screens/Home\";\nimport Symptoms from \"../screens/Symptoms\";\nimport Diagnosis from \"../screens/Diagnosis\";\n\nfunction RootNavigator() {\n  const Stack = createStackNavigator();\n\n  return (\n    <Stack.Navigator initialRouteName=\"home\">\n      <Stack.Screen\n        name=\"home\"\n        component={Home}\n        options={{ title: \"Home\", headerTitleAlign: \"center\" }}\n      />\n\n      <Stack.Screen\n        name=\"symptoms\"\n        component={Symptoms}\n        options={{\n          title: \"Select Symptoms\",\n          headerTitleAlign: \"center\",\n        }}\n      />\n\n      <Stack.Screen\n        name=\"diagnosis\"\n        component={Diagnosis}\n        options={{ title: \"Diagnosis\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default RootNavigator;\n","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport RootNavigator from \"./navigation/RootNavigator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}